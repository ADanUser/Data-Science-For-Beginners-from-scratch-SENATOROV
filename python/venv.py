"""Урок по виртуальному окружению."""

# 1. Что делает команда python -m venv venv?
# создает виртуальное окружение Python
#
# 1.1 Что делает каждая команда в списке ниже?
# pip list - Показывает список всех установленных пакетов в текущем окружении
# pip freeze > requirements.txt - Сохраняет список установленных пакетов с версиями в файл requirements.txt
# pip install -r requirements.txt - Устанавливает все пакеты, перечисленные в файле requirements.txt
#
# 2. Что делает каждая команда в списке ниже?
# conda env list - Показывает список всех созданных окружений Conda
# conda create -n env_name python=3.5 - Создает новое виртуальное окружение с указанной версией Python
# conda env update -n env_name -f file.yaml - Обновляет окружение из YAML-файла конфигурации
# source activate env_name - Активирует указанное окружение
# source deactivate - Возвращает в базовое окружение
# conda clean -a - Очищает кэш и удаляет ненужные пакеты
#
# 3. вставьте скрин вашего терминала, где вы активировали сначала venv, потом conda, назовите окружение "SENATOROV"
# ![Снимок экрана 2025-09-25 в 15.11.17.png](<attachment:Снимок экрана 2025-09-25 в 15.11.17.png>)
# ![Снимок экрана 2025-09-25 в 15.15.14.png](<attachment:Снимок экрана 2025-09-25 в 15.15.14.png>)
#
# 4. Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
# pip install и названия пакета
#
# 5. Что делают эти команды?
# pip freeze > requirements.txt -Команда создает файл requirements.txt, который содержит зафиксированные версии всех пакетов, необходимых для работы в проекта.
#
# conda env export > environment.yml - Команда создает файл environment.yml — полный "снимок" (snapshot) вашего окружения Conda.
#
# 5.1 вставьте скрин, где будет видна папка VENV в вашем репозитории а также файлы зависимостей requirements.txt и environment.yml, файлы должны содержать зависимости
# ![Снимок экрана 2025-09-25 в 16.33.49.png](<attachment:Снимок экрана 2025-09-25 в 16.33.49.png>)
# ![Снимок экрана 2025-09-25 в 16.37.44.png](<attachment:Снимок экрана 2025-09-25 в 16.37.44.png>)
# ![Снимок экрана 2025-09-25 в 16.37.53.png](<attachment:Снимок экрана 2025-09-25 в 16.37.53.png>)
#
# 6. Что делают эти команды?
# pip install -r requirements.txt - Стандартная команда для установки пакетов. Флаг -r указывает pip установить все пакеты, перечисленные в файле requirements.txt.
#
# conda env create -f environment.yml - Команда для создания нового окружения Conda. Флаг -f указывает использовать файл environment.yml как описание для нового окружения.
#
# 7. Что делают эти команды?
# pip list - Показывает краткий список всех пакетов, установленных в текущем окружении Python с помощью pip
#
# pip show - Показывает подробную информацию о конкретном пакете
#
# conda list - Показывает список всех пакетов, установленных в текущем окружении conda
#
# 8. Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
# venv/pip пакетов больше. conda лучше справляется со сложными зависимостями научных библиотек и предоставляет готовые оптимизированные сборки.
#
# 9. вставьте скрин где будет видно, Выбор интерпретатора Python (conda) в VS Code/cursor
# ![Снимок экрана 2025-09-25 в 20.13.16.png](<attachment:Снимок экрана 2025-09-25 в 20.13.16.png>)
#
# 11. Зачем нужно виртуальное окружение?
# Виртуальное окружение позволяет выгружать только те зависимости которые используются на проекте в файл requirements.txt
